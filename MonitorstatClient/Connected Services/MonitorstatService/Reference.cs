//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitorstatTest.MonitorstatService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nomenclature", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class Nomenclature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    public enum Language : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bg = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        En = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AddOperationalProgrammeRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="Programme", KeyName="Language", ValueName="Data")]
    [System.SerializableAttribute()]
    public class AddOperationalProgrammeRequest : System.Collections.Generic.Dictionary<MonitorstatTest.MonitorstatService.Language, MonitorstatTest.MonitorstatService.AddOperationalProgramme> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddOperationalProgramme", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class AddOperationalProgramme : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IdentifierField;
        
        private string NameField;
        
        private string AbbreviationField;
        
        private string CodeField;
        
        private MonitorstatTest.MonitorstatService.Nomenclature StatusField;
        
        private MonitorstatTest.MonitorstatService.Nomenclature GroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public MonitorstatTest.MonitorstatService.Nomenclature Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public MonitorstatTest.MonitorstatService.Nomenclature Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AddPriorityAxisRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="Axis", KeyName="Language", ValueName="Data")]
    [System.SerializableAttribute()]
    public class AddPriorityAxisRequest : System.Collections.Generic.Dictionary<MonitorstatTest.MonitorstatService.Language, MonitorstatTest.MonitorstatService.AddPriorityAxis> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddPriorityAxis", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class AddPriorityAxis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string OperationalProgrammeIdentifierField;
        
        private string PriorityAxisIdentifierField;
        
        private string PriorityAxisNameField;
        
        private string SpecificTargetField;
        
        private string DefinitionField;
        
        private MonitorstatTest.MonitorstatService.Nomenclature StatusField;
        
        private string CodeField;
        
        private System.Nullable<System.DateTime> YearFromField;
        
        private System.Nullable<System.DateTime> YearToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OperationalProgrammeIdentifier {
            get {
                return this.OperationalProgrammeIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationalProgrammeIdentifierField, value) != true)) {
                    this.OperationalProgrammeIdentifierField = value;
                    this.RaisePropertyChanged("OperationalProgrammeIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PriorityAxisIdentifier {
            get {
                return this.PriorityAxisIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityAxisIdentifierField, value) != true)) {
                    this.PriorityAxisIdentifierField = value;
                    this.RaisePropertyChanged("PriorityAxisIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PriorityAxisName {
            get {
                return this.PriorityAxisNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityAxisNameField, value) != true)) {
                    this.PriorityAxisNameField = value;
                    this.RaisePropertyChanged("PriorityAxisName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SpecificTarget {
            get {
                return this.SpecificTargetField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificTargetField, value) != true)) {
                    this.SpecificTargetField = value;
                    this.RaisePropertyChanged("SpecificTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public MonitorstatTest.MonitorstatService.Nomenclature Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<System.DateTime> YearFrom {
            get {
                return this.YearFromField;
            }
            set {
                if ((this.YearFromField.Equals(value) != true)) {
                    this.YearFromField = value;
                    this.RaisePropertyChanged("YearFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<System.DateTime> YearTo {
            get {
                return this.YearToField;
            }
            set {
                if ((this.YearToField.Equals(value) != true)) {
                    this.YearToField = value;
                    this.RaisePropertyChanged("YearTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AddProcedureRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="Procedure", KeyName="Language", ValueName="Data")]
    [System.SerializableAttribute()]
    public class AddProcedureRequest : System.Collections.Generic.Dictionary<MonitorstatTest.MonitorstatService.Language, MonitorstatTest.MonitorstatService.AddProcedure> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddProcedure", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class AddProcedure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string OperationalProgrammeIdentifierField;
        
        private string PriorityAxisIdentifierField;
        
        private string ProcedureIdentifierField;
        
        private string ProcedureNameField;
        
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OperationalProgrammeIdentifier {
            get {
                return this.OperationalProgrammeIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationalProgrammeIdentifierField, value) != true)) {
                    this.OperationalProgrammeIdentifierField = value;
                    this.RaisePropertyChanged("OperationalProgrammeIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PriorityAxisIdentifier {
            get {
                return this.PriorityAxisIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityAxisIdentifierField, value) != true)) {
                    this.PriorityAxisIdentifierField = value;
                    this.RaisePropertyChanged("PriorityAxisIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProcedureIdentifier {
            get {
                return this.ProcedureIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureIdentifierField, value) != true)) {
                    this.ProcedureIdentifierField = value;
                    this.RaisePropertyChanged("ProcedureIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProcedureName {
            get {
                return this.ProcedureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureNameField, value) != true)) {
                    this.ProcedureNameField = value;
                    this.RaisePropertyChanged("ProcedureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="AddSurveyInquiryRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="SurveyInquiry", KeyName="Language", ValueName="Data")]
    [System.SerializableAttribute()]
    public class AddSurveyInquiryRequest : System.Collections.Generic.Dictionary<MonitorstatTest.MonitorstatService.Language, MonitorstatTest.MonitorstatService.AddSurveyInquiry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddSurveyInquiry", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class AddSurveyInquiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ProcedureIdentifierField;
        
        private MonitorstatTest.MonitorstatService.SurveyInquiryType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.ReportInquiry[] ReportInquiriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.ActivityInquiry[] ActivityInquiriesField;
        
        private System.DateTime FinishDateField;
        
        private System.DateTime ExecutionDateFromField;
        
        private System.DateTime ExecutionDateToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProcedureIdentifier {
            get {
                return this.ProcedureIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureIdentifierField, value) != true)) {
                    this.ProcedureIdentifierField = value;
                    this.RaisePropertyChanged("ProcedureIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MonitorstatTest.MonitorstatService.SurveyInquiryType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public MonitorstatTest.MonitorstatService.ReportInquiry[] ReportInquiries {
            get {
                return this.ReportInquiriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportInquiriesField, value) != true)) {
                    this.ReportInquiriesField = value;
                    this.RaisePropertyChanged("ReportInquiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public MonitorstatTest.MonitorstatService.ActivityInquiry[] ActivityInquiries {
            get {
                return this.ActivityInquiriesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityInquiriesField, value) != true)) {
                    this.ActivityInquiriesField = value;
                    this.RaisePropertyChanged("ActivityInquiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime FinishDate {
            get {
                return this.FinishDateField;
            }
            set {
                if ((this.FinishDateField.Equals(value) != true)) {
                    this.FinishDateField = value;
                    this.RaisePropertyChanged("FinishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.DateTime ExecutionDateFrom {
            get {
                return this.ExecutionDateFromField;
            }
            set {
                if ((this.ExecutionDateFromField.Equals(value) != true)) {
                    this.ExecutionDateFromField = value;
                    this.RaisePropertyChanged("ExecutionDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime ExecutionDateTo {
            get {
                return this.ExecutionDateToField;
            }
            set {
                if ((this.ExecutionDateToField.Equals(value) != true)) {
                    this.ExecutionDateToField = value;
                    this.RaisePropertyChanged("ExecutionDateTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MonitorstatTest.MonitorstatService.GetSurveysRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MonitorstatTest.MonitorstatService.GetReportsRequest))]
    public partial class LanguageRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MonitorstatTest.MonitorstatService.Language LanguageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MonitorstatTest.MonitorstatService.Language Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((this.LanguageField.Equals(value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchIndicatorsRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class SearchIndicatorsRequest : MonitorstatTest.MonitorstatService.LanguageRequest {
        
        private string OperationalProgramCodeField;
        
        private string CodeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OperationalProgramCode {
            get {
                return this.OperationalProgramCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationalProgramCodeField, value) != true)) {
                    this.OperationalProgramCodeField = value;
                    this.RaisePropertyChanged("OperationalProgramCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSurveysRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MonitorstatTest.MonitorstatService.GetReportsRequest))]
    public partial class GetSurveysRequest : MonitorstatTest.MonitorstatService.LanguageRequest {
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetReportsRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class GetReportsRequest : MonitorstatTest.MonitorstatService.GetSurveysRequest {
        
        private string SurveyIdentifierField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SurveyIdentifier {
            get {
                return this.SurveyIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.SurveyIdentifierField, value) != true)) {
                    this.SurveyIdentifierField = value;
                    this.RaisePropertyChanged("SurveyIdentifier");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SurveyInquiryType", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    public enum SurveyInquiryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Apply = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentMonitoring = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FollowUpControl = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportInquiry", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class ReportInquiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int YearField;
        
        private string SurveyCodeField;
        
        private MonitorstatTest.MonitorstatService.ReportCodes ReportCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string SurveyCode {
            get {
                return this.SurveyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SurveyCodeField, value) != true)) {
                    this.SurveyCodeField = value;
                    this.RaisePropertyChanged("SurveyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public MonitorstatTest.MonitorstatService.ReportCodes ReportCodes {
            get {
                return this.ReportCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportCodesField, value) != true)) {
                    this.ReportCodesField = value;
                    this.RaisePropertyChanged("ReportCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityInquiry", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class ActivityInquiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int YearField;
        
        private MonitorstatTest.MonitorstatService.ActivityType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public MonitorstatTest.MonitorstatService.ActivityType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReportCodes", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="Code")]
    [System.SerializableAttribute()]
    public class ReportCodes : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityType", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    public enum ActivityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Main = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainAndAdditional = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GetSurveysResponse", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="Survey", KeyName="Identifier", ValueName="Name")]
    [System.SerializableAttribute()]
    public class GetSurveysResponse : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="GetReportsResponse", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models", ItemName="Report", KeyName="Identifier", ValueName="Name")]
    [System.SerializableAttribute()]
    public class GetReportsResponse : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterSubjectRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class RegisterSubjectRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid SurveyInquiryIdentifierField;
        
        private MonitorstatTest.MonitorstatService.SubjectRequest[] SubjectRequestsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid SurveyInquiryIdentifier {
            get {
                return this.SurveyInquiryIdentifierField;
            }
            set {
                if ((this.SurveyInquiryIdentifierField.Equals(value) != true)) {
                    this.SurveyInquiryIdentifierField = value;
                    this.RaisePropertyChanged("SurveyInquiryIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public MonitorstatTest.MonitorstatService.SubjectRequest[] SubjectRequests {
            get {
                return this.SubjectRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectRequestsField, value) != true)) {
                    this.SubjectRequestsField = value;
                    this.RaisePropertyChanged("SubjectRequests");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubjectRequest", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class SubjectRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string SubjectIdentifierField;
        
        private MonitorstatTest.MonitorstatService.Nomenclature TypeField;
        
        private MonitorstatTest.MonitorstatService.IdentifierType SubjectIdentifierTypeField;
        
        private MonitorstatTest.MonitorstatService.File ArchiveFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SubjectIdentifier {
            get {
                return this.SubjectIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectIdentifierField, value) != true)) {
                    this.SubjectIdentifierField = value;
                    this.RaisePropertyChanged("SubjectIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MonitorstatTest.MonitorstatService.Nomenclature Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public MonitorstatTest.MonitorstatService.IdentifierType SubjectIdentifierType {
            get {
                return this.SubjectIdentifierTypeField;
            }
            set {
                if ((this.SubjectIdentifierTypeField.Equals(value) != true)) {
                    this.SubjectIdentifierTypeField = value;
                    this.RaisePropertyChanged("SubjectIdentifierType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public MonitorstatTest.MonitorstatService.File ArchiveFile {
            get {
                return this.ArchiveFileField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveFileField, value) != true)) {
                    this.ArchiveFileField = value;
                    this.RaisePropertyChanged("ArchiveFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        private int SizeField;
        
        private byte[] ContentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentifierType", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    public enum IdentifierType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EIK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bulstat = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EGN = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LNCh = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchIndicatorsResponse", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class SearchIndicatorsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MonitorstatTest.MonitorstatService.Indicator[] IndicatorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MonitorstatTest.MonitorstatService.Indicator[] Indicators {
            get {
                return this.IndicatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicatorsField, value) != true)) {
                    this.IndicatorsField = value;
                    this.RaisePropertyChanged("Indicators");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Indicator", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class Indicator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodologyLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationalProgramCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Report[] ReportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Definition {
            get {
                return this.DefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefinitionField, value) != true)) {
                    this.DefinitionField = value;
                    this.RaisePropertyChanged("Definition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetadataLink {
            get {
                return this.MetadataLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataLinkField, value) != true)) {
                    this.MetadataLinkField = value;
                    this.RaisePropertyChanged("MetadataLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodologyLink {
            get {
                return this.MethodologyLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodologyLinkField, value) != true)) {
                    this.MethodologyLinkField = value;
                    this.RaisePropertyChanged("MethodologyLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationalProgramCode {
            get {
                return this.OperationalProgramCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationalProgramCodeField, value) != true)) {
                    this.OperationalProgramCodeField = value;
                    this.RaisePropertyChanged("OperationalProgramCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityLink {
            get {
                return this.QualityLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityLinkField, value) != true)) {
                    this.QualityLinkField = value;
                    this.RaisePropertyChanged("QualityLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Report[] Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportsField, value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class Report : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Filter[] FiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.TimePartition[] TimePartitionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Filter[] Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.TimePartition[] TimePartitions {
            get {
                return this.TimePartitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TimePartitionsField, value) != true)) {
                    this.TimePartitionsField = value;
                    this.RaisePropertyChanged("TimePartitions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filter", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class Filter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Entry[] EntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Nomenclature TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Entry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Nomenclature Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimePartition", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class TimePartition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Partition[] PartitionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Filter TimeFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> TimeValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Partition[] Partitions {
            get {
                return this.PartitionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionsField, value) != true)) {
                    this.PartitionsField = value;
                    this.RaisePropertyChanged("Partitions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Filter TimeFilter {
            get {
                return this.TimeFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFilterField, value) != true)) {
                    this.TimeFilterField = value;
                    this.RaisePropertyChanged("TimeFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> TimeValue {
            get {
                return this.TimeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeValueField, value) != true)) {
                    this.TimeValueField = value;
                    this.RaisePropertyChanged("TimeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entry", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class Entry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Partition", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class Partition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Entry EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Filter FilterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Entry Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryField, value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Filter Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterField, value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetIndicatorResponse", Namespace="http://schemas.datacontract.org/2004/07/NSI.WebService.Models")]
    [System.SerializableAttribute()]
    public partial class GetIndicatorResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MonitorstatTest.MonitorstatService.Indicator IndicatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MonitorstatTest.MonitorstatService.Indicator Indicator {
            get {
                return this.IndicatorField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicatorField, value) != true)) {
                    this.IndicatorField = value;
                    this.RaisePropertyChanged("Indicator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonitorstatService.IMonitorstatService")]
    public interface IMonitorstatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetStatuses", ReplyAction="http://tempuri.org/IMonitorstatService/GetStatusesResponse")]
        MonitorstatTest.MonitorstatService.Nomenclature[] GetStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetStatuses", ReplyAction="http://tempuri.org/IMonitorstatService/GetStatusesResponse")]
        System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.Nomenclature[]> GetStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetOperationalProgrammeGroups", ReplyAction="http://tempuri.org/IMonitorstatService/GetOperationalProgrammeGroupsResponse")]
        MonitorstatTest.MonitorstatService.Nomenclature[] GetOperationalProgrammeGroups(MonitorstatTest.MonitorstatService.Language language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetOperationalProgrammeGroups", ReplyAction="http://tempuri.org/IMonitorstatService/GetOperationalProgrammeGroupsResponse")]
        System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.Nomenclature[]> GetOperationalProgrammeGroupsAsync(MonitorstatTest.MonitorstatService.Language language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddOperationalProgramme", ReplyAction="http://tempuri.org/IMonitorstatService/AddOperationalProgrammeResponse")]
        System.Guid AddOperationalProgramme(MonitorstatTest.MonitorstatService.AddOperationalProgrammeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddOperationalProgramme", ReplyAction="http://tempuri.org/IMonitorstatService/AddOperationalProgrammeResponse")]
        System.Threading.Tasks.Task<System.Guid> AddOperationalProgrammeAsync(MonitorstatTest.MonitorstatService.AddOperationalProgrammeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddPriorityAxis", ReplyAction="http://tempuri.org/IMonitorstatService/AddPriorityAxisResponse")]
        System.Guid AddPriorityAxis(MonitorstatTest.MonitorstatService.AddPriorityAxisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddPriorityAxis", ReplyAction="http://tempuri.org/IMonitorstatService/AddPriorityAxisResponse")]
        System.Threading.Tasks.Task<System.Guid> AddPriorityAxisAsync(MonitorstatTest.MonitorstatService.AddPriorityAxisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddProcedure", ReplyAction="http://tempuri.org/IMonitorstatService/AddProcedureResponse")]
        System.Guid AddProcedure(MonitorstatTest.MonitorstatService.AddProcedureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddProcedure", ReplyAction="http://tempuri.org/IMonitorstatService/AddProcedureResponse")]
        System.Threading.Tasks.Task<System.Guid> AddProcedureAsync(MonitorstatTest.MonitorstatService.AddProcedureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddSurveyInquiry", ReplyAction="http://tempuri.org/IMonitorstatService/AddSurveyInquiryResponse")]
        System.Guid AddSurveyInquiry(MonitorstatTest.MonitorstatService.AddSurveyInquiryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/AddSurveyInquiry", ReplyAction="http://tempuri.org/IMonitorstatService/AddSurveyInquiryResponse")]
        System.Threading.Tasks.Task<System.Guid> AddSurveyInquiryAsync(MonitorstatTest.MonitorstatService.AddSurveyInquiryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetSurveys", ReplyAction="http://tempuri.org/IMonitorstatService/GetSurveysResponse")]
        MonitorstatTest.MonitorstatService.GetSurveysResponse GetSurveys(MonitorstatTest.MonitorstatService.GetSurveysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetSurveys", ReplyAction="http://tempuri.org/IMonitorstatService/GetSurveysResponse")]
        System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.GetSurveysResponse> GetSurveysAsync(MonitorstatTest.MonitorstatService.GetSurveysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetReports", ReplyAction="http://tempuri.org/IMonitorstatService/GetReportsResponse")]
        MonitorstatTest.MonitorstatService.GetReportsResponse GetReports(MonitorstatTest.MonitorstatService.GetReportsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetReports", ReplyAction="http://tempuri.org/IMonitorstatService/GetReportsResponse")]
        System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.GetReportsResponse> GetReportsAsync(MonitorstatTest.MonitorstatService.GetReportsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/RegisterSubjectRequest", ReplyAction="http://tempuri.org/IMonitorstatService/RegisterSubjectRequestResponse")]
        System.Collections.Generic.Dictionary<System.Guid, string> RegisterSubjectRequest(MonitorstatTest.MonitorstatService.RegisterSubjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/RegisterSubjectRequest", ReplyAction="http://tempuri.org/IMonitorstatService/RegisterSubjectRequestResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.Guid, string>> RegisterSubjectRequestAsync(MonitorstatTest.MonitorstatService.RegisterSubjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/SearchIndicators", ReplyAction="http://tempuri.org/IMonitorstatService/SearchIndicatorsResponse")]
        MonitorstatTest.MonitorstatService.SearchIndicatorsResponse SearchIndicators(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/SearchIndicators", ReplyAction="http://tempuri.org/IMonitorstatService/SearchIndicatorsResponse")]
        System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.SearchIndicatorsResponse> SearchIndicatorsAsync(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetIndicator", ReplyAction="http://tempuri.org/IMonitorstatService/GetIndicatorResponse")]
        MonitorstatTest.MonitorstatService.GetIndicatorResponse GetIndicator(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/GetIndicator", ReplyAction="http://tempuri.org/IMonitorstatService/GetIndicatorResponse")]
        System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.GetIndicatorResponse> GetIndicatorAsync(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/UpdateSurveysAndReportsNomenclature", ReplyAction="http://tempuri.org/IMonitorstatService/UpdateSurveysAndReportsNomenclatureRespons" +
            "e")]
        void UpdateSurveysAndReportsNomenclature(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitorstatService/UpdateSurveysAndReportsNomenclature", ReplyAction="http://tempuri.org/IMonitorstatService/UpdateSurveysAndReportsNomenclatureRespons" +
            "e")]
        System.Threading.Tasks.Task UpdateSurveysAndReportsNomenclatureAsync(int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonitorstatServiceChannel : MonitorstatTest.MonitorstatService.IMonitorstatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitorstatServiceClient : System.ServiceModel.ClientBase<MonitorstatTest.MonitorstatService.IMonitorstatService>, MonitorstatTest.MonitorstatService.IMonitorstatService {
        
        public MonitorstatServiceClient() {
        }
        
        public MonitorstatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitorstatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorstatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitorstatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MonitorstatTest.MonitorstatService.Nomenclature[] GetStatuses() {
            return base.Channel.GetStatuses();
        }
        
        public System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.Nomenclature[]> GetStatusesAsync() {
            return base.Channel.GetStatusesAsync();
        }
        
        public MonitorstatTest.MonitorstatService.Nomenclature[] GetOperationalProgrammeGroups(MonitorstatTest.MonitorstatService.Language language) {
            return base.Channel.GetOperationalProgrammeGroups(language);
        }
        
        public System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.Nomenclature[]> GetOperationalProgrammeGroupsAsync(MonitorstatTest.MonitorstatService.Language language) {
            return base.Channel.GetOperationalProgrammeGroupsAsync(language);
        }
        
        public System.Guid AddOperationalProgramme(MonitorstatTest.MonitorstatService.AddOperationalProgrammeRequest request) {
            return base.Channel.AddOperationalProgramme(request);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddOperationalProgrammeAsync(MonitorstatTest.MonitorstatService.AddOperationalProgrammeRequest request) {
            return base.Channel.AddOperationalProgrammeAsync(request);
        }
        
        public System.Guid AddPriorityAxis(MonitorstatTest.MonitorstatService.AddPriorityAxisRequest request) {
            return base.Channel.AddPriorityAxis(request);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddPriorityAxisAsync(MonitorstatTest.MonitorstatService.AddPriorityAxisRequest request) {
            return base.Channel.AddPriorityAxisAsync(request);
        }
        
        public System.Guid AddProcedure(MonitorstatTest.MonitorstatService.AddProcedureRequest request) {
            return base.Channel.AddProcedure(request);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddProcedureAsync(MonitorstatTest.MonitorstatService.AddProcedureRequest request) {
            return base.Channel.AddProcedureAsync(request);
        }
        
        public System.Guid AddSurveyInquiry(MonitorstatTest.MonitorstatService.AddSurveyInquiryRequest request) {
            return base.Channel.AddSurveyInquiry(request);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddSurveyInquiryAsync(MonitorstatTest.MonitorstatService.AddSurveyInquiryRequest request) {
            return base.Channel.AddSurveyInquiryAsync(request);
        }
        
        public MonitorstatTest.MonitorstatService.GetSurveysResponse GetSurveys(MonitorstatTest.MonitorstatService.GetSurveysRequest request) {
            return base.Channel.GetSurveys(request);
        }
        
        public System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.GetSurveysResponse> GetSurveysAsync(MonitorstatTest.MonitorstatService.GetSurveysRequest request) {
            return base.Channel.GetSurveysAsync(request);
        }
        
        public MonitorstatTest.MonitorstatService.GetReportsResponse GetReports(MonitorstatTest.MonitorstatService.GetReportsRequest request) {
            return base.Channel.GetReports(request);
        }
        
        public System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.GetReportsResponse> GetReportsAsync(MonitorstatTest.MonitorstatService.GetReportsRequest request) {
            return base.Channel.GetReportsAsync(request);
        }
        
        public System.Collections.Generic.Dictionary<System.Guid, string> RegisterSubjectRequest(MonitorstatTest.MonitorstatService.RegisterSubjectRequest request) {
            return base.Channel.RegisterSubjectRequest(request);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.Guid, string>> RegisterSubjectRequestAsync(MonitorstatTest.MonitorstatService.RegisterSubjectRequest request) {
            return base.Channel.RegisterSubjectRequestAsync(request);
        }
        
        public MonitorstatTest.MonitorstatService.SearchIndicatorsResponse SearchIndicators(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request) {
            return base.Channel.SearchIndicators(request);
        }
        
        public System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.SearchIndicatorsResponse> SearchIndicatorsAsync(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request) {
            return base.Channel.SearchIndicatorsAsync(request);
        }
        
        public MonitorstatTest.MonitorstatService.GetIndicatorResponse GetIndicator(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request) {
            return base.Channel.GetIndicator(request);
        }
        
        public System.Threading.Tasks.Task<MonitorstatTest.MonitorstatService.GetIndicatorResponse> GetIndicatorAsync(MonitorstatTest.MonitorstatService.SearchIndicatorsRequest request) {
            return base.Channel.GetIndicatorAsync(request);
        }
        
        public void UpdateSurveysAndReportsNomenclature(int year) {
            base.Channel.UpdateSurveysAndReportsNomenclature(year);
        }
        
        public System.Threading.Tasks.Task UpdateSurveysAndReportsNomenclatureAsync(int year) {
            return base.Channel.UpdateSurveysAndReportsNomenclatureAsync(year);
        }
    }
}
